@using MapSqlAspNetCoreMVC.Models.Output;
@using MapSqlAspNetCoreMVC.Models.View;
@using Microsoft.AspNetCore.Mvc.Localization;
@using X.PagedList.Mvc.Bootstrap4.Core;
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model VillageFilterViewModel
@inject IViewLocalizer ViewLocalizer

@{
    ViewData["Title"] = @ViewLocalizer["PageName"];
}
<h1>@ViewData["Title"]</h1>


@using (Html.BeginForm("Index", "VillageFilter", FormMethod.Post))
{ 
	<table>
        <tr>
            <td>
                @Html.DisplayNameFor(m => m.Input.AllianceId)
            </td>
            <td>
                @Html.DropDownListFor(m => m.Input.AllianceId, Model.Alliances)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(m => m.Input.TribeId)
            </td>
            <td>
                @Html.DropDownListFor(m => m.Input.TribeId, Model.Tribes)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(m => m.Input.X)
            </td>
            <td>@Html.TextBoxFor(m => m.Input.X, new {@type = "number"})</td>
            <td>
                @Html.DisplayNameFor(m => m.Input.Y)
            </td>
            <td>@Html.TextBoxFor(m => m.Input.Y, new {@type = "number"})</td>
        </tr>
		<tr>
            <td>
                @Html.DisplayNameFor(m => m.Input.MinPop)
            </td>
            <td>@Html.TextBoxFor(m => m.Input.MinPop, new {@type = "number"})</td>
		</tr>
		<tr>
            <td>
                @Html.DisplayNameFor(m => m.Input.MaxPop)
            </td>
            <td>@Html.TextBoxFor(m => m.Input.MaxPop, new {@type = "number"})</td>
		</tr>
		<tr>
            <td colspan="2"><input type="submit" value="@ViewLocalizer["Find"]" /></td>
		</tr>
	</table>
}

<p>@ViewLocalizer["FoundMessage",@Model.VillageTotal,@Model.Server]</p>
<table class="table">
    <thead>
        <tr>
            <th>
                ~
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model) => model.AllianceName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.PlayerName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.VillageName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.Tribe)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.Coordinate)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.Population)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.IsCapital)
            </th>
            <th>
                @Html.DisplayNameForInnerType((Village model)  => model.Distance)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Villages)
        {
            <tr>
                <td>
                    <a href="https://@Model.Server/position_details.php?x=@item.X&y=@item.Y" target="_blank">@ViewLocalizer["Link"]</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllianceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VillageName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tribe)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Coordinate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Population)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsCapital)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Distance)
                </td>
            </tr>
        }
    </tbody>
</table>
@using (Html.BeginForm())
{
    <div id="container" style="margin-left: 20px">
        <p></p>
        <p></p>
        <div class="pagination" style="margin-left: 400px">
            @ViewLocalizer["Page", (Model.Villages.PageCount < Model.Villages.PageNumber ? 0 : Model.Villages.PageNumber), Model.Villages.PageCount]

            @Html.PagedListPager(Model.Villages, page => {
                Model.Input.PageNumber = page;
                return Url.Action("Index", Model.Input );
                }, Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    </div>
}