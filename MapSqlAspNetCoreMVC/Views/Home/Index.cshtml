@using MapSqlAspNetCoreMVC.Models.Output
@using MapSqlAspNetCoreMVC.Models.View
@using MapSqlAspNetCoreMVC.Controllers;
@using Microsoft.AspNetCore.Mvc.Localization;
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@model HomeViewModel
@inject IViewLocalizer ViewLocalizer

@{
    ViewData["Title"] = @ViewLocalizer["PageName"];
}

<div class="text-center">
    <h1 class="display-4">@ViewLocalizer["Welcome"]</h1>
    <p>@ViewLocalizer["DateMessage", Model.Today]</p>
    <p>Current server: @Model.ServerUrl </p>

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameForInnerType((Server model) => model.Url)
                </th>
                <th>
                    @Html.DisplayNameForInnerType((Server model) => model.Region)
                </th>
                <th>
                    @Html.DisplayNameForInnerType((Server model) => model.AllianceCount)
                </th>
                <th>
                    @Html.DisplayNameForInnerType((Server model) => model.PlayerCount)
                </th>
                <th>
                    @Html.DisplayNameForInnerType((Server model) => model.VillageCount)
                </th>                
            </tr>
        </thead>
        <tbody>
            @foreach (var server in Model.Servers)
            {
                <tr>
                    <td>
                        <a href="https://@Model.ServerUrl" target="_blank">@server.Url</a>
                    </td>
                    <td>
                        @Html.DisplayFor( m => server.Region)
                    </td>
                    <td>
                        @Html.DisplayFor(m => server.AllianceCount)
                    </td>
                    <td>
                        @Html.DisplayFor(m => server.PlayerCount)
                    </td>
                    <td>
                        @Html.DisplayFor(m => server.VillageCount)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @using (Html.BeginForm())
    {
        <div id="container" style="margin-left: 20px">
            <p></p>
            <p></p>
            <div class="pagination" style="margin-left: 400px">
                @ViewLocalizer["Page", (Model.Servers.PageCount < Model.Servers.PageNumber ? 0 : Model.Servers.PageNumber), Model.Servers.PageCount]

                @Html.PagedListPager(Model.Servers, page =>
                    {
                        Model.Input.PageNumber = page;
                        return Url.Action(nameof(HomeController.Index), Model.Input);
                    }, Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
            </div>
        </div>
    }
</div>
