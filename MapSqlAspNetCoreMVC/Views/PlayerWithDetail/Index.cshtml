@using MapSqlAspNetCoreMVC.Extension;
@using MapSqlAspNetCoreMVC.Models.Output;
@using MapSqlAspNetCoreMVC.Models.View;
@using MapSqlAspNetCoreMVC.Controllers;
@using Microsoft.AspNetCore.Mvc.Localization;
@using static MapSqlAspNetCoreMVC.Models.Output.PlayerWithDetail;
@inject IViewLocalizer ViewLocalizer
@model PlayerWithDetailViewModel
@{
    ViewData["Title"] = @ViewLocalizer["PageName"];
}
<h1>@ViewData["Title"]</h1>

@using (Html.BeginForm(nameof(PlayerWithDetailController.Index), ControllerExtensions.ShortControllerName<PlayerWithDetailController>(), FormMethod.Get))
{
    <table>
        <tr>
            <td>@Html.DisplayNameFor(m => m.Input.PlayerName)</td>
            <td>@Html.TextBoxFor(m => m.Input.PlayerName)</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.Input.Days)</td>
            <td>@Html.TextBoxFor(m => m.Input.Days, new {@type = "number"})</td>
        </tr>
        <tr>
            <td colspan="2"><input type="submit" value="@ViewLocalizer["Find"]" /></td>
        </tr>
    </table>
}


@if (Model.Player == null)
{
    if (string.IsNullOrWhiteSpace(Model.Input.PlayerName))
    {
        <p>@ViewLocalizer["EmptyMessage"]</p>
    }
    else
    {
        <p>@ViewLocalizer["NotFound", Model.Input.PlayerName]</p>

    }
	return;
}

<div>
    <p>@Html.DisplayNameFor(m => m.Player.PlayerName) : @Html.DisplayFor(m => m.Player.PlayerName)</p>
    <p>@Html.DisplayNameFor(m => m.Player.AllianceName) : @Html.DisplayFor(m => m.Player.AllianceName)</p>
    <p>@Html.DisplayNameFor(m => m.Player.Tribe) : @Html.DisplayFor(m => m.Player.Tribe)</p>
    
</div>

<h2>@Html.DisplayNameFor(m => m.Player.Population)</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                ~
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageWithPopulation model) => model.VillageName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageWithPopulation model) => model.Coordinate)
            </th>
            @for (var i = 0; i < Model.Dates.Count; i++)
            {
                <th>
                    @Model.Dates[i].ToString("dd/MM/yyyy")
                </th>
            }
            
        </tr>
    </thead>
    <tbody>
        @foreach (var village in Model.Player.Population)
        {
            <tr>
                @if (village.VillageName.Equals(VillageWithPopulation.Total))
                {
                    <td>~</td>
                    <td>@ViewLocalizer["Total"]</td>
                    <td>~</td>
                }
                else
				{
                    <td>
                        <a href="https://@Model.Server/position_details.php?x=@village.X&y=@village.Y" target="_blank">@ViewLocalizer["LinkTitle"]</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => village.VillageName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => village.Coordinate)
                    </td>
                }
                    
                @for (var i = 0; i < Model.Dates.Count; i++)
                {
                    <td>
                        @if (i >= village.Population.Count())
                        {
                            <p>~</p>
                        }
                        else
                        {
                            <p>
                                @Html.DisplayFor(m => village.Population[i])

                                @if (i == village.Population.Count - 1) continue;
                                [ @(village.Population[i] - village.Population[i + 1]) ]
                            </p>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<h2>@Html.DisplayNameFor(m => m.Player.AllianceNames)</h2>

<table class="table">
    <thead>
        <tr>           
            @for (var i = 0; i < Model.Dates.Count; i++)
            {
                <th>
                    @Model.Dates[i].ToString("dd/MM/yyyy")
                </th>
            }

        </tr>
    </thead>
    <tbody>
        <tr>
            @foreach (var alliance in Model.Player.AllianceNames)
        {
            <td>
                @Html.DisplayFor(m => alliance)
            </td>
        }
        </tr>
    </tbody>
</table>