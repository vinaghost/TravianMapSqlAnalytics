@using Core.Models
@using Core.Parameters
@using Core.Queries
@using MediatR
@using WebMVC.Controllers
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@using Core.Services

@inject IMediator mediator
@inject DataService dataService

@model PlayerContainsAllianceHistoryParameters
@{
    ViewData["Title"] = "Players with alliance history";
}

@using (Html.BeginForm(nameof(PlayersController.AllianceHistory), "Players", FormMethod.Post))
{ 
    <table>
        <tr>
            <td>@Html.DisplayNameFor(m => m.MinChangeAlliance)</td>
            <td>@Html.TextBoxFor(m => m.MinChangeAlliance, new { @type = "number"})</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.MaxChangeAlliance)</td>
            <td>@Html.TextBoxFor(m => m.MaxChangeAlliance, new { @type = "number"})</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.Date)</td>
                <td>@Html.TextBoxFor(m => m.Date, "{0:yyyy-MM-dd}", new { type = "date" })</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.Alliances)</td>
            <td><input id="AllianceInput" type="text" value="@string.Join(',', Model.Alliances)" /> (Id of alliances, separated with ",")</td>
        </tr>
        <tr>
            <td>@Html.DisplayNameFor(m => m.Players)</td>
            <td><input id="PlayerInput" type="text" value="@string.Join(',', Model.Players)" /> (Id of players, separated with ",")</td>
        </tr>
        <tr>
            <td>@Html.HiddenFor(m => m.Date)</td>
            <td>@Html.HiddenFor(m => m.Alliances)</td>
            <td>@Html.HiddenFor(m => m.Players)</td>
            <td>@Html.HiddenFor(m => m.PageNumber)</td>
            <td>@Html.HiddenFor(m => m.PageSize)</td>
        </tr>
            <tr><td colspan="2"><input type="submit" id="Check" class="btn btn-primary" value="Check" /></td>
            
        </tr>
    </table>
}

@{
    var players = await mediator.Send(new GetPlayerContainsAllianceHistoryQuery(Model));
}
<div class="text-center">
    <p>Your current server is @dataService.Server</p>
    <p>We found <b>@players.TotalItemCount players</b> fit your request</p>
</div>

@if (players.Count > 0) {
    @Html.DisplayFor(_ => players, nameof(PlayerContainsAllianceHistoryDetail))
    @await Html.PartialAsync("_PaginationPartial", players)
}


@section Scripts {
    <script src="~/js/pagination.js"></script>
    <script src="~/js/string_to_list_submit.js"></script>
}