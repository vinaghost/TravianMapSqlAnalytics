@using Core.Models
@using Core.Parameters
@using Core.Queries
@using Core.Services
@using MediatR
@using WebMVC.Controllers
@using X.PagedList.Mvc.Bootstrap4.Core
@using X.PagedList.Mvc.Core
@using Core.Dtos

@inject IMediator mediator
@inject DataService dataService

@model PlayerContainsPopulationHistoryParameters
@{
    ViewData["Title"] = "Players with population history";
}

@Html.EditorForModel(nameof(PlayerContainsPopulationHistoryParameters))


@{
    var players = await mediator.Send(new GetPlayerContainsPopulationHistoryQuery(Model));
}

<div class="text-center">
    <p>Your current server is @dataService.Server</p>
    <p>We found <b>@players.TotalItemCount players</b> fit your request</p>
</div>

@if (players.Count > 0)
{
    @Html.DisplayFor(_ => players, nameof(PlayerContainsPopulationHistoryDto))
    @await Html.PartialAsync("_PaginationPartial", players)
}

@section Scripts {
    <script src="~/js/pagination.js" asp-append-version="true"></script>
    <script src="~/js/string_to_list_submit.js" asp-append-version="true"></script>
}