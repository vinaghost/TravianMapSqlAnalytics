@using Infrastructure.Services
@using WebMVC.Models.ViewModel.Alliances
@inject IServerCache serverCache
@inject IMediator mediator

@model IndexViewModel
@{
    ViewData["Title"] = "Alliances";
}

@using (Html.BeginForm(nameof(AlliancesController.Index), "Alliances", FormMethod.Get))
{
    <div class="container">
        @await Html.PartialAsync("_ServerPickerPartial")

        <div class="input-group mt-3">
            <span class="input-group-text">
                Alliances
            </span>

            <select class="form-select @Constants.Select2Combox" name="AllianceId" data-ajax--url="/alliances/names">
                @if (Model?.Alliance is not null)
                {
                    <option value="@Model.Alliance.AllianceId" selected="true">@Model.Alliance.AllianceName</option>
                }
            </select>
        </div>
        <input type="submit" id="Check" class="btn btn-primary mt-2" value="Check alliances" />
    </div>
}

@if (!ViewBag.IsInput)
{
    <div>Choose alliances and check</div>

}
else
{
    @if (Model is null)
    {
        <div>Input is not valid</div>
    }
    else if (Model.Alliance is null)
    {
        <div>Alliance not found</div>
    }
    else
    {        
        <div class="card">
            <div class="container">
                <div class="row">
                    <div class="col-2">
                        Alliance name:
                    </div>
                    <div class="col">
                        @if (Model.Alliance.AllianceId == 0)
                        {
                            <div>@Model.Alliance.AllianceName</div>
                        }
                        else
                        {
                            <a href="https://@serverCache.Server/alliance/@Model.Alliance.AllianceId"
                                target="_blank"
                                type="button"
                                class="btn-link text-decoration-none">
                                @Model.Alliance.AllianceName
                            </a>
                        }
                    </div>
                </div>
                <div class="row">
                    <div class="col-2">
                        Player count:
                    </div>
                    <div class="col">
                        @Model.Alliance.PlayerCount
                    </div>
                </div>
            </div>
        </div>

        <br />

        @if (Model.Players.Count == 0)
        {
            <div>Players not found</div>
        }
        else
        {
            var dates = Model.Population.Values.MaxBy(x => x.Count)?.Select(x => x.Date).ToArray() ?? [];

            <table class="table table-hover">
                <thead>
                    <tr>
                        <th class="col-4">
                            Player
                        </th>
                        <th class="col-4">
                            Village count
                        </th>
                        @for (var i = 0; i < dates.Length; i++)
                        {
                            <th>
                                @dates[i].ToString("dd/MM")
                            </th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var player in Model.Players)
                    {
                        <tr>
                            <td>
                                <a href="/players?playerId=@player.PlayerId"
                                    target="_blank"
                                    type="button"
                                    class="btn-link text-decoration-none">
                                    <span>@Html.DisplayFor(m => player.PlayerName)</span>
                                </a>
                            </td>
                            <td>
                                @Html.DisplayFor(m => player.VillageCount)
                            </td>

                            @if (Model.Population.ContainsKey(player.PlayerId))
                            {
                                var populations = Model.Population[player.PlayerId];
						        for (var i = 0; i < dates.Length; i++)
						        {
							        <td>
								        @if (i >= populations.Count)
								        {
									        <p>~</p>
								        }
								        else
								        {
									        <p>
										        @Html.DisplayFor(m => populations[i])
									        </p>
								        }
							        </td>
						        }
                            }
                            else
                            {
                                for (var i = 0; i < dates.Length; i++)
                                {
                                    <td>
                                        <p>~</p>
                                    </td>
                                }
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
}