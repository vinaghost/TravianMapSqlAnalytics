@using Core.Features.GetNeighbors
@using Core.Features.Shared.Dtos
@using System.Diagnostics

@inject IMediator mediator
@inject DataService dataService

@model NeighborsParameters

@{
    ViewData["Title"] = "Neighbors";
}

@using (Html.BeginForm(nameof(VillagesController.Neighbors), "Villages", FormMethod.Post))
{
    <div class="container">
        @await Html.PartialAsync("_ServerPickerPartial")

        @Html.EditorForModel()

        <input type="submit" id="Check" class="btn btn-primary mt-2" value="Check" />
    </div>
}

@{
    var dates = Enumerable.Range(0, Constants.DateAmount).Select(x => DateTime.Now.AddDays(-x)).ToList();
    IPagedList<VillageDataDto>? dto = null;
}
@if (!Model.IsUserInput)
{
    <div class="text-center">
        <p>Enter your request and check!</p>
    </div>
}
else
{
    <div class="text-center">
        @if (ViewData.ModelState.IsValid)
        {
            var sw = new Stopwatch();
            sw.Start();
            dto = await mediator.Send(new GetNeighborsQuery(Model));
            sw.Stop();
            string content;
            if (sw.ElapsedMilliseconds > 1000)
            {
                content = $"{sw.ElapsedMilliseconds / 1000} s";
            }
            else
            {
                content = $"{sw.ElapsedMilliseconds} ms";
            }

            <p>We found <b>@(dto?.TotalItemCount ?? 0) villages</b> fit your request in @content</p>
        }
        else
        {
            <p>We found <b>0 villages</b> fit your request</p>
        }
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameForInnerType((VillageDataDto village) => village.Distance)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageDataDto village) => village.Player)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageDataDto village) => village.Village)
            </th>
            @for (var i = 0; i < dates.Count; i++)
            {
                <th>
                    @dates[i].ToString("dd/MM")
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @Html.DisplayFor(x => dto)
    </tbody>
</table>


@await Html.PartialAsync("_PaginationPartial", dto)
