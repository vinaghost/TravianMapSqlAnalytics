@using Core.Dtos
@using Core.Models
@using Core.Services
@using X.PagedList
@inject DataService dataService
@model IPagedList<VillageContainsPopulationHistoryDto>

@{
    var dates = Model.First().Populations.Select(x => x.Date).ToList();
    var page = Model.PageSize * (Model.PageNumber - 1);
}

<table class="table">
    <thead>
        <tr>
            <th>
                ~
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.PlayerName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.AllianceName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.VillageName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.X) | @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.Y)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.Tribe)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.IsCapital)
            </th>
            <th>
                @Html.DisplayNameForInnerType((VillageContainsPopulationHistoryDto village) => village.ChangePopulation)
            </th>
            @for (var i = 0; i < dates.Count; i++)
            {
                <th>
                    @dates[i].ToString("dd/MM/yyyy")
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var (value, i) in Model.Select((value, i) => (value, i)))
        {
            <tr>
                <td>
                    @(page + i + 1)
                </td>
                <td>
                    <a href="https://@dataService.Server/profile/@value.PlayerId" target="_blank">@Html.DisplayFor(m => value.PlayerName)</a>
                </td>
                <td>
                    <a href="https://@dataService.Server/alliance/@value.AllianceId" target="_blank">@Html.DisplayFor(m => value.AllianceName)</a>
                </td>
                <td>
                    <a href="https://@dataService.Server/karte.php?x=@value.X&y=@value.Y" target="_blank">@Html.DisplayFor(m => value.VillageName)</a>
                </td>
                <td>
                    @Html.DisplayFor(m => value.X) | @Html.DisplayFor(m => value.Y)
                </td>
                <td>
                    @Html.DisplayFor(m => Constants.TribeNames[value.Tribe])

                </td>
                <td>
                    @Html.DisplayFor(m => value.IsCapital)
                </td>
                <td>
                    @Html.DisplayFor(m => value.ChangePopulation)
                </td>
                @for (var pos = 0; pos < dates.Count; pos++)
                {
                    <td>
                        @if (pos >= value.Populations.Count)
                        {
                            <p>~</p>
                        }
                        else
                        {
                            <p>
                                @Html.DisplayFor(m => value.Populations[pos].Amount)

                                @if (pos == value.Populations.Count - 1) continue;
                                [ @(value.Populations[pos].Amount - value.Populations[pos + 1].Amount) ]
                            </p>
                        }
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

