@using Core.Features.GetVillageContainsPopulationHistory

@inject IMediator mediator
@inject DataService dataService

@model VillageContainsPopulationHistoryParameters
@{
    ViewData["Title"] = "Villages with population history";
}

@Html.EditorForModel(nameof(VillageContainsPopulationHistoryParameters))

@if (ViewData.ModelState.IsValid)
{
    var villages = await mediator.Send(new GetVillageContainsPopulationHistoryQuery(Model));


    <div class="text-center">
        <p>Your current server is @dataService.Server</p>
        <p>We found <b>@villages.TotalItemCount villages</b> fit your request</p>
    </div>

    @if (villages.Count > 0)
    {
        @Html.DisplayFor(_ => villages, nameof(VillageContainsPopulationHistoryDto))
        @await Html.PartialAsync("_PaginationPartial", villages)
    }
}
else
{
    <div class="text-center">
        <p>Your current server is @dataService.Server</p>
        <p>There is something wrong with your request. Please check again</p>
    </div>
}

@section Scripts {
    <script src="~/js/pagination.js" asp-append-version="true"></script>    
    <script src="~/js/sorting.js" asp-append-version="true"></script>
    <script src="~/js/string_to_list_submit.js" asp-append-version="true"></script>
}