@using Core.Features.GetInactiveFarms
@using Core.Features.SearchAlliance
@using Core.Features.SearchPlayer

@inject IMediator mediator

@model InactiveFarmParameters


@Html.EditorFor(m => m.X)
@Html.EditorFor(m => m.Y)

@Html.EditorFor(m => m.Date)

@{
    var players = await mediator.Send(new SearchPlayerByIdQuery(Model.Players));
    var alliances = await mediator.Send(new SearchAllianceByIdQuery(Model.Alliances));
}


@Html.EditorFor(m => m.Players, "ListInt", "", new { Name = nameof(Model.Players), Url = "/players/search", Data = players })
@Html.EditorFor(m => m.Alliances, "ListInt", "", new { Name = nameof(Model.Alliances), Url = "/alliances/search", Data = alliances })

<div class="mt-3">
    <a href="#" class="link-primary" data-bs-toggle="collapse" data-bs-target="#filter-fields">
        Advanced filters
    </a>

</div>
<div class="collapse" id="filter-fields">
    @Html.EditorFor(m => m.MinDistance)
    @Html.EditorFor(m => m.MaxDistance)

    @Html.EditorFor(m => m.MinPlayerPopulation)
    @Html.EditorFor(m => m.MaxPlayerPopulation)

    @Html.EditorFor(m => m.MinVillagePopulation)
    @Html.EditorFor(m => m.MaxVillagePopulation)
</div>

<div>
    @Html.HiddenFor(m => m.PageNumber)
    @Html.HiddenFor(m => m.PageSize)
</div>