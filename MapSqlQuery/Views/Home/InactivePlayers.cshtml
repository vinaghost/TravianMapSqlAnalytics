@using MapSqlQuery.Models.View;
@using MapSqlQuery.ViewModels;
@model InactivePlayerViewModel

@{
    ViewData["Title"] = "Inactive Players";
}
<h1>@ViewData["Title"]</h1>

<p>@Model.Players.Count() players of server @ViewData["Server"] </p>
@using (Html.BeginForm("InactivePlayers", "Home", FormMethod.Post))
{ 
    <table>
        <tr>
            <td>Enter Days: </td>
            <td>@Html.TextBoxFor(m => m.FormInput.Days, new {@type = "number"})</td>
        </tr>
        <tr>
            <td colspan="2"><input type="submit" value="Submit Form" /></td>
        </tr>
    </table>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Link to profile
            </th>
            <th>
                @Html.DisplayNameForInnerType((PlayerPopulation model) => model.PlayerName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((PlayerPopulation model)  => model.AllianceName)
            </th>
            <th>
                @Html.DisplayNameForInnerType((PlayerPopulation model)  => model.Tribe)
            </th>
            <th>
                Village count
            </th>
            @for (var i = 0; i < (int)ViewData["Days"]! ; i++)
            {
                <th>
                    Day @i
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Players)
        {
            <tr>
                <td>
                    <a href="https:/@ViewData["Server"]/profile/@item.PlayerId" target="_blank">Show</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlayerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AllianceName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tribe)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VillageCount)
                </td>

                @for (var i = 0; i < (int)ViewData["Days"]!; i++)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Population[i])
                        
                        @if(i == (int)ViewData["Days"]! - 1) continue;
                        [ @(item.Population[i] - item.Population[i + 1]) ]
                    </td>
                }
            </tr>
        }
    </tbody>
</table>
